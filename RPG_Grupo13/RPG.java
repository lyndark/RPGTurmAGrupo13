import java.util.Scanner;
import java.util.concurrent.TimeUnit;
import java.util.Random;
import java.util.Collections;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.ArrayList;

public class RPG {

	
	// DARK LOGICS - THE GREAT CHALLENGE
	public static int contarPontos = 0;
	public static String nomePet = "";

	public static void main(String[] args) throws InterruptedException, IOException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {

		Scanner scr = new Scanner(System.in);

		menu(scr);

	}

	public static void menu(Scanner scr) throws InterruptedException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {

		String nomePersonagem = "";
		String nomeMago = "";
		
		int opcao;

		do {
			System.out.println("_________________________");
			System.out.println("         MENU          ");
			System.out.println("_________________________");
			System.out.println("\n1 - INSTRU√á√ïES \n2 - JOGAR \n3 - CR√âDITOS \n4 - SAIR");

			opcao = scr.nextInt();

			switch (opcao) {
			case 1:
				System.out.println("¬´ Instru√ß√µes ¬ª");
				instrucoes();

				String continuarJogo = scr.next();
				if (continuarJogo.equalsIgnoreCase("s")) {
					menu(scr);
				}
				break;
			case 2:
				System.out.println("\n¬´ Iniciando jogo ¬ª\n");
				sinopse();

				nomePersonagem = nomePersonagem(scr, nomePersonagem);
				carregaJogo();

				dialogoInicial(scr, nomePersonagem, opcao);

				break;
			case 3:
				System.out.println("¬´ Cr√©ditos ¬ª");
				System.out.println(
						"Desenvolvido por: \nDaniel Leite \nEvelyn Santos Rodrigues \nKevin Corumba Alexandre \nMariana Rosa da Silva ¬Æ");
				break;
			case 4:
				System.out.println("¬´ Programa Encerrado ¬ª");
				break;
			default:
			}
		} while (opcao == 4);
	}

	public static void sinopse() {
		System.out.println(
				"\nGordes √© um dos mais bonitos vilarejos do Pal√°cio das almas, fica no alto de uma colina de Luberon na Regi√£o de Provence. A √°rea pacata e calma foi tomada pelo Grande Spartakus.\r\n"
						+ "O maior objetivo de Spartakus √© causar o caos e tomar o vilarejo para si e transformar em um reino de terror.\r\n"
						+ "Reza a lenda que existe um grande guerreiro destinado a trazer a paz de volta para Gordes. Ser√° voc√™ o grande prometido??\r\n"
						+ "");
	}

	public static void instrucoes() {
		System.out.println(
				"\n√â um jogo de perguntas e respostas baseado no tema 'Portas L√≥gicas', o jogador passar√° por 5 fases nas quais enfrentar√° os cincos seguidores de Spartakus (Baratheon, Frey, Alliser, Varys e Bolton) at√© chegar na fase final. As fases consistem em perguntas simples/moderadas.\r\n"
						+ "O jogador contar√° com ajuda do Mago Azadium que der√° breve instru√ß√µes de como exercitar a l√≥gica para a resolu√ß√£o do problema. Se o jogador acertar as quest√µes ele ganhar√° um grande companheiro pet (ele pode ajudar ou atrapalhar, preste banstante aten√ß√£o nas palavras ditas por ele; por mais que pare√ßam sem nexo, tem um grande sentido!).\r\n"
						+ "Ahh, n√£o posso esquecer que cada quest√£o certa o jogador ganhar√° uma certa quantidade de pontos. AAAAAA e pra que servem esses pontos????? √â uma boa pergunta!!!! Os pontos adquiridos em cada etapa lhe trar√£o o direito de adquirir um item na fase final (√© uma ajuda e tanto). \r\n"
						+ "\nEae, bora jogar?????");
	}


	public static void dialogoInicial(Scanner scr, String nomePersonagem, int opcao) throws InterruptedException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {

		Escreva("üßô‚Äç‚ôÇÔ∏è Ol√° Grande Cavalheiro(a), " + nomePersonagem + ". Como est√°s?\n", TimeUnit.MILLISECONDS, 60);

		System.out.println("Digite 1 - Estou bem \nDigite 2 - N√£o estou bem");

		int resposta = scr.nextInt();

		if (resposta == 1) {
			System.out.print("\nüßô‚Äç‚ôÇÔ∏è √ìtimo!! Irei te guiar em nosso reino.\n");
		} else {
			System.out.print("\nüßô‚Äç‚ôÇÔ∏è Bom, iremos melhorar essa situa√ß√£o, serei seu guia em nosso reino\n");
		}

		Escreva("\nüßô‚Äç‚ôÇÔ∏è Este reino possui grandes desafios, para um(a) jovem como voc√™ " + nomePersonagem + "\n",
				TimeUnit.MILLISECONDS, 60);
		System.out.print("\n1 - Ficarei honrado em ser seu disc√≠pulo!!\n2 - Gostaria muito de saber mais sobre!!! \n");
		int resposta1 = scr.nextInt();

		if (resposta1 == 1) {
			System.out.print("\nüßô‚Äç‚ôÇÔ∏è Seja Bem-Vindo!!!\n");
		} else {
			System.out.print("\nüßô‚Äç‚ôÇÔ∏è Ficarei honrado em lhe ensinar, Seja Bem-Vindo!!!\n");
		}

		Escreva("\nüßô‚Äç‚ôÇÔ∏è Nosso reino est√° esperando ha muito tempo um guerreiro(a)\nque possa abrir as portas logicas e vencer o grande Vil√£o \n",
				TimeUnit.MILLISECONDS, 60);

		System.out.print("\n1 - Esse cara sou eu!!! \n2 - Esse √© o meu chamado de vida, mestre!!! \n");
		int resposta2 = scr.nextInt();
		if (resposta2 == 1) {
			Escreva("\nüßô‚Äç‚ôÇÔ∏è kkk Veremos meu, caro.\n", TimeUnit.MILLISECONDS, 60);
		} else {
			Escreva("\nüßô‚Äç‚ôÇÔ∏è Veremos...\n", TimeUnit.MILLISECONDS, 60);
		}

		Escreva("\nüßô‚Äç‚ôÇÔ∏è Irei passar algumas orientac√µes sobre as tais portas logicas funcionam " + nomePersonagem
				+ "\n", TimeUnit.MILLISECONDS, 60);
		System.out.print("\n1- Certo mestre! \n2- Escutarei atentamente \n");
		int resposta3 = scr.nextInt();

		if (resposta3 == 1) {
			System.out.print("üßô‚Äç‚ôÇÔ∏è Azadium diz: ");
			Escreva("Pois bem, deseja continuar? \n", TimeUnit.MILLISECONDS, 60);
			System.out.println("\n1 - Continuar \n2 - Parar");
			int escolha = scr.nextInt();
			if (escolha == 1) {
				Escreva("üßî Baratheon diz: Voc√™," + nomePersonagem + ", jamais ir√° me derrotar, pois eu sou o MAIOR e o mais forte de toda Gordes HAHAHHAHAHA.",
						TimeUnit.MILLISECONDS, 60);
				primeiroDesafio(scr, nomePersonagem, opcao);
			} else {
				finalizaJogo(opcao);
			}

		} else {
			System.out.print("\nüßô‚Äç‚ôÇÔ∏è Que assim seja\n");
			
			Escreva("\nüßô‚Äç‚ôÇÔ∏è Azadium diz: As portas ou circuitos l√≥gicos s√£o dispositivos "
					+ "que operam e trabalham com um ou mais sinais \n l√≥gicos de entrada para produzir uma e somente uma sa√≠da, dependente da fun√ß√£o implementada no circuito.\n S√£o geralmente usadas em circuitoseletr√¥nicos, por causa das situa√ß√µes que os sinais deste tipo de circuito \n podem apresentar: presen√ßa de sinal, ou '1', e aus√™ncia de sinal, ou '0'. As situa√ß√µes Verdade e Falso \n",
					TimeUnit.MILLISECONDS, 60);
			Escreva("\nüßô‚Äç‚ôÇÔ∏è Azadium diz: Nesse primeiro desafio voc√™ enfrentar√° o disc√≠pulo de Spartakus - Baratheon. Est√° preparado(a)?",
					TimeUnit.MILLISECONDS, 60);

			System.out.println("\n1 - Sim \n2 - N√£o");
			int escolha = scr.nextInt();
			if (escolha == 1) {
				Escreva("üßî Baratheon diz: Voc√™," + nomePersonagem + ", jamais ir√° me derrotar, pois eu sou o MAIOR e o mais forte de toda Gordes HAHAHHAHAHA.",
						TimeUnit.MILLISECONDS, 60);
				primeiroDesafio(scr, nomePersonagem, opcao);
			} else {
				finalizaJogo(opcao);
			}

		}

	}
	
	static int contadorPergunta = 0;
	public static boolean pergunta(Scanner scr, String nomePersonagem, int opcao, String[] alternativas, 
			String resposta) throws InterruptedException, IllegalAccessException, 
	IllegalArgumentException, 
	InvocationTargetException {
		
		if(contadorPergunta != 0) {
			Escreva("\nüßô‚Äç‚ôÇÔ∏è Ok, vamos para mais uma tentativa\n", TimeUnit.MILLISECONDS, 60);
			contadorPergunta++;
		}
		
		ArrayList<String> perguntas = new ArrayList<String>();
		perguntas.add(alternativas[0]);
		perguntas.add(alternativas[1]);
		perguntas.add(alternativas[2]);
		perguntas.add(alternativas[3]);
		perguntas.add(alternativas[4]);
		perguntasAleatorias(perguntas);
		
		String respostaCerta = resposta;
		int escolhaPergunta = scr.nextInt();
		int escolhaIndex = escolhaPergunta - 1;
		
		String respostaUsuario = (String) perguntas.get(escolhaIndex);
		
		System.out.println(respostaCerta + " - " + respostaUsuario);
		
		if (respostaCerta == respostaUsuario) {
			contadorPergunta = 0;
			return true;
		} else if(respostaCerta != respostaUsuario) {
			Escreva("\nüßô‚Äç‚ôÇÔ∏è Azadium diz: Deseja tentar novamente?\n", TimeUnit.MILLISECONDS, 60);
			System.out.println("\n1 - Sim, estou confiante! \n2 - N√£o");
			
			int escolha = scr.nextInt();
			
			if(escolha == 1) {
				pergunta(scr, nomePersonagem, opcao, alternativas, respostaUsuario);
			}else {
				finalizaJogo(opcao);
			}
		}
		return false;
	}

	public static void finalizaJogo(int opcao) {
		opcao = 4;
	}

	public static void Escreva(String mensagem, TimeUnit unit, long tempo_mensagem) throws InterruptedException {
		for (char caractere : mensagem.toCharArray()) {
			System.out.print(caractere);
			unit.sleep(tempo_mensagem);
		}
	}

	public static void primeiroDesafio(Scanner scr, String nomePersonagem, int opcao) throws InterruptedException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {

		Escreva("\nüßô‚Äç‚ôÇÔ∏è Para ir para o pr√≥ximo n√≠vel, voc√™ precisar√° descobrir como abrir a porta a frente. Voc√™ ver√° \r\n"
				+ "uma porta representada pela express√£o booleana S = A . B . C, e para abrir a porta a sa√≠da do \r\n"
				+ "circuito deve ser 1, ent√£o voc√™ dever√° escolher os valores das entradas cujo na tabela verdade \r\n"
				+ "o valor seja 1. Qual das alternativas abre essa porta? (100 pontos)\n", TimeUnit.MILLISECONDS, 60);

		ArrayList<String> perguntas = new ArrayList<String>();
		perguntas.add("A = 1, B = 0, C = 1");
		perguntas.add("A = 1, B = 1, C = 1");
		perguntas.add("A = 1, B = 1, C = 0");
		perguntas.add("A = 0, B = 0, C = 0");
		perguntas.add("A = 0, B = 1, C = 1");
		perguntasAleatorias(perguntas);

		String respostaCerta = "A = 1, B = 1, C = 1";
		int escolhaPergunta = scr.nextInt();

		String respostaUsuario = (String) perguntas.get(escolhaPergunta - 1);

		if (respostaCerta == respostaUsuario) {
			segundoDesafio(scr, nomePersonagem, opcao);
		} else {
			Escreva("\nüßî Baratheon diz: HAHAHAHAHA " + nomePersonagem + ", eu disse que voc√™ n√£o era pare√¥ para mim!!!\n", TimeUnit.MILLISECONDS, 60);
			Escreva("\nüßô‚Äç‚ôÇÔ∏è Azadium diz: Deseja tentar novamente?\n", TimeUnit.MILLISECONDS, 60);
			System.out.println("\n1 - Sim \n2 - N√£o");
			
			int escolha = scr.nextInt();
			
			if(escolha == 1) {
				primeiroDesafio(scr, nomePersonagem, opcao);
			}else {
				finalizaJogo(opcao);
			}
		}

	}
	

	public static void segundoDesafio(Scanner scr, String nomePersonagem, int opcao) throws InterruptedException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {
		
		Escreva("\nüßô‚Äç‚ôÇÔ∏è Azadium diz:  Boa, " +  nomePersonagem + ". Voc√™ conseguiu com grande sabedoria resolver o primeiro desafio, e sua recompensa ser√° um pet que ir√° te fazer companhia nessa jornada. \n", 
				TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüßô‚Äç‚ôÇÔ∏è Como deseja chamar o seu novo companheiro?  \n", TimeUnit.MILLISECONDS, 60);
		nomePet = scr.next();
		
		Escreva("\nüò∫ " + nomePet + " diz: UAAAAAAAAAAAL, √© um grande prazer em lhe conhecer, mestre " +  nomePersonagem +"!\n", TimeUnit.MILLISECONDS, 60);
		Escreva("\nüòª Eu sou uma gatinha miaaaaaaaaau.\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\n" + nomePersonagem + " diz: √â um prazer conher voc√™ tamb√©m, " + nomePet + " \n", TimeUnit.MILLISECONDS, 60);
		Escreva("\n" + nomePersonagem + " diz: Estou muito contente com a sua companhia, " + nomePet + ". Iremos ter grandes aventuras juntos. \n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüßô‚Äç‚ôÇÔ∏è Azadium diz: Que bom, " + nomePersonagem + " e " + nomePet + " , √© bom ver que est√£o se dando bem... " + nomePersonagem + ", voc√™s est√£o prontos para o pr√≥ximo desafio?\n", TimeUnit.MILLISECONDS, 60);
		Escreva("\nüßô‚Äç‚ôÇÔ∏è Voc√™ enfrentar√° o segundo o disc√≠pulo Spartakus - Frey\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüë®‚Äçü¶≥ Tome cuidado, n√£o pense que ser√° f√°cil como foi antes!\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nEu n√£o tenho medo, irei derrota-lo!!!\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nConfesso que estou apreensivo!!!\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüë®‚Äçü¶≥ Frey diz: Voc√™ " + nomePersonagem + ", jamais passar√° por mim!! N√£o pense que eu sou fraco igual ao Baratheon. Para passar por mim exige uma sabedoria que voc√™ claramente n√£o tem. \n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nSINTA MEU PODEEER üî•üî•üî•\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüßô‚Äç‚ôÇÔ∏è Espero que esteja confiante, " + nomePersonagem + "\n", TimeUnit.MILLISECONDS, 60);
		Escreva("\nüßô‚Äç‚ôÇÔ∏è Uma porta NOR de 3 entradas tem ____ possibilidades de sa√≠da\n", TimeUnit.MILLISECONDS, 60);
		
		String[] alternativas = {"Uma", "Quatro", "Oito", "Todas as anteriores", " Nenhuma das anteriores"};
		boolean resposta = pergunta(scr, nomePersonagem, opcao, alternativas, "Oito");
		if(resposta) {
			Escreva("\nüë®‚Äçü¶≥ Frey diz: N√£o acredito que um(a) fracote como voc√™ foi capaz de me derrotar AAAAAAAAAAA\n", TimeUnit.MILLISECONDS, 60);
			Escreva("\nüë®‚Äçü¶≥ VOC√ä PASSOU POR MIM, MAS, JAMAIS IR√Å DERROTAR O ALLISER.\n", TimeUnit.MILLISECONDS, 60);
			terceiroDesafio(scr, nomePersonagem, opcao);
		}
		
	}

	public static void terceiroDesafio(Scanner scr, String nomePersonagem, int opcao) throws InterruptedException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {
		Escreva("\nüßô‚Äç‚ôÇÔ∏è Azadium diz: Parece que temos aqui o grande guerreiro destinado a salvar Gordes.\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüòª " + nomePet + " diz: Meu mestre √© um g√™nio!!!!!!\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüßô‚Äç‚ôÇÔ∏è Azadium diz: Est√° preparado para pr√≥xima fase? As coisas est√£o ficando quentes e as portas est√£o se abrindo HAHAHAHAHA\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüòª " + nomePet + " diz: ~miauuuuuuu que velho sem no√ß√£o ~miauuuuu\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüßô‚Äç‚ôÇÔ∏è Azadium diz:" + nomePersonagem + ", se prepare para o pr√≥ximo desafio √¥oooooo grande guerreiro.\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüßîüèæ‚Äç Alliser diz: N√£o tem como um fedelho(a) que nem voc√™ me derrotar. JAMAIS JAMAIS!!!!"
				+ "Voc√™ sentir√° a f√∫ria de um grande deus. E ESSE DEUS SOU EU.\n"
				+ "MORRAAAAAA, " + nomePersonagem + ", MORRAAAAAA!!!\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüßô‚Äç‚ôÇÔ∏è‚Äç Azadium diz: Aqui est√° seu pr√≥ximo desafio:\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüßô‚Äç‚ôÇÔ∏è A sa√≠da de uma por OR com tr√™s entradas, A, B, e C, √© BAIXA quando ______.\n", TimeUnit.MILLISECONDS, 60);
		
		String[] alternativas = {
				"A = 0, B = 0, C = 0", 
				"A = 0, B = 0, C = 1", 
				"A = 0, B = 1, C = 1", 
				"A = 1, B = 1, C = 1", 
				"Todas as anteriores"
				};
		
		Escreva("\nüòª " + nomePet + " diz: nem todos os zeros s√£o a esquerda ririri ~miaaaaaaaau\n", TimeUnit.MILLISECONDS, 60);
		
		boolean resposta = pergunta(scr, nomePersonagem, opcao, alternativas, "A = 0, B = 0, C = 0");
		if(resposta) {
			Escreva("\nüòª " + nomePet + "~miaaaaaaau\n"
					+ "MEU MESTRE √â O MELHOR!\n"
					+ "MEU MESTRE √â O MELHOR!\n", TimeUnit.MILLISECONDS, 60);
			
			Escreva("\nüßîüèæ Alliser diz: ISSO N√ÉO IR√Å FICAR ASSIM, EU IREI ME VINGAR.\n"
					+ "EU PROMETO QUE IREI ME VINGAR :@\n"
					+ "AAAAAAAAAAAAAAAAAAAAAAAAAAA\n"
					+ "VOC√ä AINDA SENTIR√Å A F√öRIA DE UM GRANDE DEUS\n", TimeUnit.MILLISECONDS, 60);
			
			Escreva("\nüßô‚Äç‚ôÇÔ∏è‚Äç As portas est√£o se abrindo de maneira surpreendente HAHAHA ~grande entusiasmo \n"
					+ "- Voc√™ est√° indo muito bem, " + nomePersonagem + "\n"
					+ " De fato voc√™ √© o(a) grande guerreiro(a) escolhido.\n"
					+ "Vamos para o pr√≥ximo desafio. \n"
					+ "\n", TimeUnit.MILLISECONDS, 60);
			
			quartoDesafio(scr, nomePersonagem, opcao);
			
		}else {
			Escreva("\nüßîüèæ Alliser diz: EU SABIA QUE JAMAIS SERIA DERROTADO POR FEDELHO(A) IGUAL A VOC√ä\n"
					+ "NIGU√âM √â P√ÅREO PARA UM DEUS COMO EU, NINGU√âEEEEEEM\r"
					+ "\n", TimeUnit.MILLISECONDS, 60);
			
			Escreva("\nüòª " + nomePet + " meu mestre(a) √© o melhor, ele ir√° te derrotar da pior forma  ~miaaaaaaau\n", TimeUnit.MILLISECONDS, 60);
		}
		
		
	}

	public static void quartoDesafio(Scanner scr, String nomePersonagem, int opcao) throws InterruptedException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {
		
		Escreva("\nüßîüèø‚Äç‚Äç Varys diz: \n"
				+ "Esperem um pouco \n"
				+ "DAQUI VOC√äS N√ÉO PASSAR√ÉO \n"
				+ "Aqueles tolos s√≥ tinham um √∫nico trabalho, e fracassaram. ~decepcionado \n"
				+ "A arrog√¢ncia do homem o torna burro. \n"
				+ "N√£o sou que nem aqueles arrogantes, daqui voc√™ n√£o passar√£o. \n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüßô‚Äç‚ôÇÔ∏è Uma porta NOR de 2 entradas √© equivalente a ______.\n", TimeUnit.MILLISECONDS, 60);
		
		String[] alternativas = {
				"Porta OR negativa √° entrada", 
				"Porta OR negativa √° sa√≠da", 
				"Porta AND negativa √° sa√≠da",  
				"Todas as anteriores", 
				"Nenhuma das anteriores"
				};
		
		Escreva("\nüòª " + nomePet + " diz: miaaaaaau baby no or no or oh oh oh ~cantarolando~ \n", TimeUnit.MILLISECONDS, 60);
		boolean resposta = pergunta(scr, nomePersonagem, opcao, alternativas, "Porta OR negativa √° sa√≠da");
		if(resposta) {
			
			Escreva("\nüòª " + nomePet + " diz: que belo dia para salvar vilas chefin ~miauuuuuuuuu\n", TimeUnit.MILLISECONDS, 60);
			Escreva("\nüßô‚Äç‚ôÇÔ∏è Sempre persistir e jamais desistir!", TimeUnit.MILLISECONDS, 60);
			Escreva("\nüßîüèø Como um s√°bio, sei quando admitir a derrota. \n"
					+ "Estou me retirando...\n"
					+ "As coisas podem estar indo bem agora. Ser√° que ir√° continuar assim? \n", TimeUnit.MILLISECONDS, 60);
			
			Escreva("\nüßô‚Äç‚ôÇÔ∏è Nunca vi nada parecido antes, tenho orgulho do tanto que voc√™ evoluiu nessa jornada!\n", TimeUnit.MILLISECONDS, 60);
			Escreva("\nüòª " + nomePet + " diz: orgulho chefin, orgulho! ‡ºº „Å§‚óï_‚óï ‡ºΩ„Å§  ~miauuuuuuu\n", TimeUnit.MILLISECONDS, 60);
			
			Escreva("\nüßô‚Äç‚ôÇÔ∏è Preparado para o pen√∫ltimo desafio? Voc√™ foi muito forte at√© aqui. Se sinta orgulhoso!", TimeUnit.MILLISECONDS, 60);
			
			quintoDesafio(scr, nomePersonagem, opcao);
			
		}else {
			Escreva("\nüòª " + nomePet + " diz:  mestrinho(a)...\n"
					+ "voc√™ s√≥ est√° cansado, pense um pouco melhor ~miauuuuuuu\n", TimeUnit.MILLISECONDS, 60);
			Escreva("\nüßîüèø‚Äç‚Äç O grande segredo da vida √© admitir a derrota e jamais tentar novamente.", TimeUnit.MILLISECONDS, 60);
			Escreva("\nüßô‚Äç‚ôÇÔ∏è Algumas palavras podem desmotivar, mas, n√£o se\n"
					+ "esque√ßa da for√ßa que h√° em voc√™, " + nomePersonagem + "! Siga em frente...\n", TimeUnit.MILLISECONDS, 60);
		}
	}

	public static void quintoDesafio(Scanner scr, String nomePersonagem, int opcao) throws InterruptedException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {
		
		Escreva("\nüòª " + nomePet + " diz:  Aquele √© Bolton, o mal em forma de gente! Ele parece um garotinho ego√≠sta, \n"
				+ "trai√ßoeiro e descarado, mas na verdade ele √© muito, muito mais do que isso. ~miauuuuuuuuuuuu\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüßîüèø Bolton diz: Como chegaram at√© aqui? Os outros \n"
				+ "disc√≠pulos s√£o muito incompetentes. Ser√° que eu tenho que fazer tudo por aqui?\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüßô‚Äç‚ôÇÔ∏è Quantas combina√ß√µes de entrada uma tabela de verdade teria com um gate AND de seis entradas? \n", TimeUnit.MILLISECONDS, 60);
		
		String[] alternativas = {
				"32", 
				"48", 
				"64",  
				"128", 
				"Nenhuma das anteriores"
				};
		
		Escreva("\nüòª " + nomePet + " diz: s√£o dois? s√£o seis? n√£o sei ~miauuuuuu\n", TimeUnit.MILLISECONDS, 60);
		boolean resposta = pergunta(scr, nomePersonagem, opcao, alternativas, "64");
		
		if(resposta) {
			Escreva("\nüßô‚Äç‚ôÇÔ∏è As outras portas n√£o eram nada perto dessa...\n", TimeUnit.MILLISECONDS, 60);
			Escreva("\nüßô‚Äç‚ôÇÔ∏è Voc√™ conseguiu chegar at√© aqui... o √∫ltimo desafio o DESAFIO FINAL com o todo poderoso SPARTAKUS. \n", TimeUnit.MILLISECONDS, 60);
			Escreva("\nüßô‚Äç‚ôÇÔ∏è Voc√™s est√° pronto para esse sombrio desafio? Serei realista √© logo lhe direi que n√£o ser√° nada f√°cil essa fase. \n", TimeUnit.MILLISECONDS, 60);
			
			sextoDesafio(scr, nomePersonagem, opcao);
			
		}else {
			Escreva("\nüßîüèø Bolton diz: Existe uma possibilidade de 30% de j√° estar chovendo.\n"
					+ "Ser√° que voc√™ seria capaz de responder certo?\n", TimeUnit.MILLISECONDS, 60);
			
			Escreva("\nüòª " + nomePet + " diz: Eu estava obcecada. Passava 80% do meu tempo falando sobre o "
					+ "Bolton e os 20% restantes eu torcia para que algu√©m falasse disso, s√≥ para poder falar mais um pouco ~miaaaaaaau\n", 
					TimeUnit.MILLISECONDS, 60);
			
			
			Escreva("\nüßô‚Äç‚ôÇÔ∏è S√≥ sei que nada sei. \n", TimeUnit.MILLISECONDS, 60);
			
			
		}
		
	}

	public static void sextoDesafio(Scanner scr, String nomePersonagem, int opcao) throws InterruptedException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {
		
		Escreva("\nüßîüèø‚Äç SPARTAKUS diz: COMO OUSAM ME PERTURBAR??????\n"
				+ "AAAAAAAAAAAAAAAA :@ :@ :@ ~furioso\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüòª " + nomePet + " diz: chefin estou com medo ~miauuuuu\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüßîüèø‚Äç SPARTAKUS diz: N√£o me importa o seu conhecimento adquirido at√© aqui. " +  nomePersonagem + ", voc√™ nunca ter√° a capacidade de me derrotar. \n"
				+ "Gordes √© MINHA! Esse vilarejo me pertence! Voc√™s jamais o ter√£o de volta...\n"
				+ "Desistam aqui e n√£o passem pela humilha√ß√£o da derrota. Serei gentil e os deixarei ir sem nenhum arranh√£o. \n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüòª " + nomePet + " diz: chefin estou com medo ~miauuuuu\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüßô‚Äç‚ôÇÔ∏è Azadium diz: Tenha calma e pense com saberia, s√£o escolhas dificeis. Estamos aqui por um objetivo!\n", TimeUnit.MILLISECONDS, 60);
		
		Escreva("\nüßô‚Äç‚ôÇÔ∏è Azadium e Spartakus dizem: \n"
				+ "EST√Å PREPARADO PARA ESSE DESAFIO?\n", TimeUnit.MILLISECONDS, 60);
		
		System.out.println("\n1 - SIM \n2 - CHEGUEI AT√â AQUI PELO OBJETIVO, E ESSE OBJETIVO √â SALVAR GORDES.");
		
		int resposta2 = scr.nextInt();
		if (resposta2 == 1 || resposta2 == 2) {
			Escreva("\nüßô‚Äç‚ôÇÔ∏è DESAFIO FINAL - O GRANDE DESAFIO\n", TimeUnit.MILLISECONDS, 60);
		}
		
		Escreva("\nüßô‚Äç‚ôÇÔ∏è A sa√≠da de uma porta XOR √© ALTA se _____.\n", TimeUnit.MILLISECONDS, 60);
		
		String[] alternativas = {
				"Todas as entradas s√£o BAIXAS", 
				"Todas as entradas s√£o ALTAS", 
				"As entradas s√£o desiguais",  
				"Todas as anteriores", 
				"Nenhuma das anteriores"
				};
		
		Escreva("\nüòª " + nomePet + " diz: s√£o dois? s√£o seis? n√£o sei ~miauuuuuu\n", TimeUnit.MILLISECONDS, 60);
		boolean resposta = pergunta(scr, nomePersonagem, opcao, alternativas, "64");
		
		if(resposta) {
			
			Escreva("\nüßô‚Äç‚ôÇÔ∏è Azadium e üòª" + nomePet + " dizem: \n"
					+ "Voc√™ conseguiu, voc√™ conseguiu!!!\n"
					+ "Gordes finalmente est√° a salvo.\n"
					+ "‚ú¥ Podemos retomar as nossas vidas e tudo isso gra√ßas a voc√™!!!!!!! ‚ú¥\n " + nomePersonagem + ", Parab√©ns por chegar at√© aqui!\n", TimeUnit.MILLISECONDS, 60);
			
			Escreva("\nüßô‚Äç‚ôÇÔ∏è Spartakus diz:\n"
					+ "ISSO N√ÉO FICAR√Å ASSIM...\n"
					+ "TER√Å VOLTA...\n", TimeUnit.MILLISECONDS, 60);
			
			System.out.println("     ..!:                                    \r\n"
					+ "     .                      !!!!             \r\n"
					+ "         #########!:              !####!!!!           \r\n"
					+ "       .#############            ##:...!!#!!          \r\n"
					+ "       :#####:!!::##!            .#:.:...:###.        \r\n"
					+ "        !##!....::.                .!...!####         \r\n"
					+ "        ..!###!:!##:            :##!!!..:!!!##        \r\n"
					+ "     !!!:!!!!   ..:!.         .!##!!##!:##!##!#!:     \r\n"
					+ "    #####!!###!!!!!##:        !:#:::: . :#::##:::     \r\n"
					+ "    .#####!##!###!!# !        ::!!!!!.. :!!!!#! .     \r\n"
					+ "   .##!######!!!!:.##.       :!:!!::: . ::::!!#!.     \r\n"
					+ "    !#####!!!!!!:  .###      !##!:::::::::::!####     \r\n"
					+ "    !!!!####!##########!!     :##!::::::::!##!::!     \r\n"
					+ "    :  ###################   ..!!#:!#####!!!###!!.    \r\n"
					+ "    ..:.!!!!########::!  .   ##:::::::::::###! ###    \r\n"
					+ "     :.:######!:::::::!::   !#####!:!!:::::!!######   \r\n"
					+ "     .:!:###:::::::!!:!:!:  !#########.############.  \r\n"
					+ "      !:##:::::::!!:::!        .######  ##########!   \r\n"
					+ "      ##########!:!!::!         #####    #########.   \r\n"
					+ "      !:::::::!!::::::.          ####     ####.       \r\n"
					+ "     .!:::::::!:::::!!          .####     :###.       \r\n"
					+ "    !!::::!!::!::::!!!           ####:    :###!       \r\n"
					+ "   !::::!!!::  !!::!!!            ####    .####       \r\n"
					+ " .!::::::::.  :::::!!:.           ####     ####.      \r\n"
					+ " :::::::::!  ::::::::!!          !!!!!!     ###!      \r\n"
					+ " .::::::::!    #!:!!::            :!::.     ####      \r\n"
					+ "  .##::##      !##:##             ###:      #####     \r\n"
					+ "   #####       :######           !###!       ###      \r\n"
					+ "   #####           !#####       ####         #!!#     \r\n"
					+ "   :#####                                    ####.   \r\n"
					+ "");
			
		}else {
			Escreva("\nüßîüèø Spartakus diz: \n"
					+ "HAHAHAHAHAHAHAA\n"
					+ "EU SABIA QUE UM FRACOTE IGUAL A VOC√ä JAMAIS TERIA CHANCES CONTRA MIM\n"
					+ "VOLTE PARA CASA, GORDES N√ÉO PERTECE MAIS √Å VOC√äS\n"
					+ "GORDES √â MINHA, √â MINHA E SEMPRE SER√Å\n", TimeUnit.MILLISECONDS, 60);
			
			Escreva("\nüòª " + nomePet + " diz: chefin estou com medo ~miauuuuu\n", TimeUnit.MILLISECONDS, 60);
			
			Escreva("\nüßô‚Äç‚ôÇÔ∏è Azadium diz: Persistir e Persistir e jamais desistir!\n", TimeUnit.MILLISECONDS, 60);
			
		}
	}

	public static void carregaJogo() throws InterruptedException {
		int count = 0;
		System.out.println("\n‚åõ Carregando jogo...");
		for (int i = 0; i < 5000; i++) {
			count++;
			if (count == 100) {
				Thread.sleep(100);
				System.out.print("=");
				count = 0;
			}
		}
		System.out.print(" 100%\n");
		System.out.println("ok, vamos l√°‚ÄºÔ∏è");
	}

	public static String nomePersonagem(Scanner scr, String nomePersonagem) {
		System.out.println("Como seu personagem ir√° se chamar? ");
		nomePersonagem = scr.next();

		return nomePersonagem;
	}

	public static String nomeMago(Scanner scr, String nomeMago) {
		System.out.println("Digite o nome do personagem: ");
		nomeMago = scr.next();

		return nomeMago;
	}

	public static void perguntasAleatorias(ArrayList<String> opcoes) {
		Collections.shuffle(opcoes);
		System.out.println("\n");
		for (int indexOpcoes = 0; indexOpcoes < opcoes.size(); indexOpcoes++) {
			System.out.println((indexOpcoes + 1) + ") - " + opcoes.get(indexOpcoes));
		}
	}

}
